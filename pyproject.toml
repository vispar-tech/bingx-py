[tool.poetry]
name = "bingx-py"
version = "0.1.0"
description = "A python BingX API sync/async client"
authors = ["Daniil Pavlovich <layred.dota2@mail.ru>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "bingx_py" }]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.11.11"
requests = "^2.32.3"
redis = "^5.2.1"
pydantic = "^2.10.5"


[tool.poetry.group.dev.dependencies]
python-dotenv = "^1.0.1"
ruff = "^0.9.2"
pyright = "^1.1.392.post0"
pre-commit = "^4.0.1"


[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
furo = "^2024.8.6"

[tool.pyright]
typeCheckingMode = "strict"
strict = ["bingx_py"]
include = ["bingx_py"]

reportMissingImports = true
reportUnusedImport = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportGeneralTypeIssues = true

[tool.ruff]
indent-width = 4
fix = true
unsafe-fixes = true
cache-dir = "/tmp/ruff-cache/"
exclude = ["./tests", "./docs"]

[tool.ruff.lint]
select = [
    'ALL'
]
ignore = ["E501", "FA100", "D107", "D100", "ANN401", "G004", "FBT001", "FBT002", "PGH003", "PLR0913", "D203", "D213"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
no-lines-before = ["future", "standard-library"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
